<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description"
    content="Buy high-quality oversized t-shirts in India. AsUsual offers trendy unisex graphic tees, cotton t-shirts for men & women. Free shipping on all orders. Shop now!">
  <meta name="keywords"
    content="asusual, asusua, asusual clothing, oversized t shirts india, ASUSUAL clothing, graphic tees india, cotton t shirts online, trendy streetwear india, buy t shirts online india">
  <title>Ecommerce - T-Shirt Store</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
  <!-- Favicons -->
  <link rel="icon" href="/assests/favicon.png" type="image/x-icon" sizes="any">
  <link rel="icon" href="/assests/favicon.svg" type="image/svg+xml">
  <link rel="apple-touch-icon" href="/assests/apple-touch-icon.png">
  <link rel="manifest" href="/assests/site.webmanifest">
  <meta name="theme-color" content="#ffffff">
  <link rel="stylesheet" href="/styles/allProduct.css" />
  <link rel="stylesheet" href="styles/styles.css" />
  <link rel="stylesheet" href="styles/footer.css" />
  <link rel="stylesheet" href="styles/navbar.css" />
  <style>
    .card.flipped .imgBox {
      transform: rotateY(180deg);
    }

    .card::after {
      content: "ASUSUAL";
      position: absolute;
      bottom: 0;
      left: 16px;
      font-weight: 600;
      font-size: 3.6rem;
      color: rgba(255, 255, 255, 0.1);
    }
  </style>
</head>

<body>
  <!-- Page Loader -->
  <div id="page-loader" class="page-loader">
    <h1 class="slide-in">Asusual</h1>
    <div class="spinner"></div>
  </div>

  <!-- this is the responsive navbar -->
  <%- include('../partials/navbar', { user: user, cartCount: cartCount }) %>
  <%- include('../partials/flash') %>

    <div class="All-product-container">
      <!-- Filters Section -->
      <div class="filters">
        <!-- <h2>Filters</h2> -->



        <!-- Other Filters -->
        <details>
          <summary>Filters</summary>
          <div class="other-filter">
            <!-- Price Range Slider -->
            <div class="slider-container">
              <label for="price-range">Price Range:</label>
              <input type="range" id="price-range" min="0" max="5000" step="100" value="5000"
                oninput="updatePrice(this.value)" />
              <div class="slider-values">
                <span>₹1</span>
                <span id="price-value">5000</span>
                <span>₹5000</span>
              </div>
            </div>
            <!-- Sizes Filter -->
            <div class="collapse">
              <h3 onclick="toggleCollapse('sizes')">Sizes</h3>
              <div class="collapse-content" id="sizes">
                <div class="checkbox-group">
                  <input type="checkbox" id="size1" value="xsmall" />
                  <label for="size1">XS</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="size2" value="small" />
                  <label for="size2">S</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="size3" value="medium" />
                  <label for="size3">M</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="size4" value="large" />
                  <label for="size4">L</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="size5" value="xlarge" />
                  <label for="size5">XL</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="size6" value="xxlarge" />
                  <label for="size6">XXL</label>
                </div>
              </div>
            </div>

            <!-- Category Filter -->
            <div class="collapse">
              <h3 onclick="toggleCollapse('category')">Category</h3>
              <div class="collapse-content" id="category">
                <div class="checkbox-group">
                  <input type="checkbox" id="regular" value="regular" />
                  <label for="regular">Regular</label>
                </div>
                <div class="checkbox-group">
                  <input type="checkbox" id="oversized" value="oversized" />
                  <label for="oversized">Oversized</label>
                </div>
              </div>
            </div>

            <!-- Category Type Filter -->
            <div class="collapse">
              <h3 onclick="toggleCollapse('categoryType')">Category Type</h3>
              <div class="collapse-content" id="categoryType">
                <% if (categoryTypes && categoryTypes.length> 0) { %>
                  <% categoryTypes.forEach((type, index)=> { %>
                    <div class="checkbox-group">
                      <input type="checkbox" id="type<%= index %>" value="<%= type.toLowerCase() %>" />
                      <label for="type<%= index %>">
                        <%= type %>
                      </label>
                    </div>
                    <% }) %>
                      <% } else { %>
                        <p>No category types available</p>
                        <% } %>
              </div>
            </div>


            <!-- Colors Filter -->
            <!-- Colors Filter -->
            <div class="collapse">
              <h3 onclick="toggleCollapse('colors')">Colors</h3>
              <div class="collapse-content" id="colors">
                <% if (availableColors && availableColors.length> 0) { %> <% availableColors.forEach((color, index)=> {
                    %>
                    <div class="checkbox-group">
                      <input type="checkbox" id="color<%= index %>" value="<%= color %>" />
                      <label for="color<%= index %>">
                        <%= color.charAt(0).toUpperCase() + color.slice(1) %>
                      </label>
                    </div>
                    <% }); %>
                      <% } else { %>
                        <p>No color options available</p>
                        <% } %>
              </div>
            </div>

            <!-- Inside the "Sort by Price" collapse section -->
            <div class="collapse">
              <h3 onclick="toggleCollapse('sort-order')">Sort by</h3>
              <div class="collapse-content" id="sort-order">
                <!-- Price Sorting -->
                <h4>Price</h4>
                <div class="radio-group">
                  <input type="radio" id="sort-asc" name="sort-price" value="asc" checked />
                  <label for="sort-asc">Low to High</label>
                </div>
                <div class="radio-group">
                  <input type="radio" id="sort-desc" name="sort-price" value="desc" />
                  <label for="sort-desc">High to Low</label>
                </div>

                <!-- Name Sorting -->
                <h4>Name</h4>
                <div class="radio-group">
                  <input type="radio" id="sort-name-asc" name="sort-name" value="asc" />
                  <label for="sort-name-asc">A to Z</label>
                </div>
                <div class="radio-group">
                  <input type="radio" id="sort-name-desc" name="sort-name" value="desc" />
                  <label for="sort-name-desc">Z to A</label>
                </div>
              </div>
            </div>
            <!-- end -->
          </div>
        </details>

        <!-- Apply Filters Button -->
        <button class="apply-filters" onclick="applyFilters()">
          Apply Filters
        </button>
      </div>

      <!-- Products Section -->
      <div class="products" id="product-list">
        <% if (products && products.length> 0) { %> <% products.forEach(product=> { %>
            <div class="card" data-url="/products/<%= product._id || product.id %>">
              <div class="imgBox">
                <div class="front">
                  <img src="<%= product.front_image %>" alt="<%= product.name %>" class="mouse" loading="lazy" />
                </div>
                <div class="back">
                  <img src="<%= product.back_image %>" alt="<%= product.name %>" class="mouse" loading="lazy" />
                </div>
              </div>
              <div class="contentBox">
                <h3>
                  <%= product.name %>
                </h3>
                <h2 class="price">
                  <small>Rs.</small>
                  <%= product.price %>
                </h2>
                <a href="/products/<%= product._id || product.id %>" class="buy">Buy Now</a>
              </div>
            </div>
            <% }); %>
              <% } else { %>
                <p>No products available.</p>
                <% } %>
      </div>
    </div>

    <%- include('../partials/footer') %>

      <script>
        // Hold all original products globally
        let allProducts = [];

        // Try to parse the products data safely
        try {
          allProducts = <%- typeof products !== 'undefined' ? JSON.stringify(products) : '[]' %>;
        } catch (e) {
          console.error("Error parsing products:", e);
          allProducts = [];
        }

        function updatePrice(value) {
          document.getElementById("price-value").innerText = `₹${value}`;
        }

        function toggleCollapse(id) {
          const element = document.getElementById(id);
          if (element) {
            element.style.display = element.style.display === 'none' ? 'block' : 'none';
          }
        }

        function setupMobileNavigation() {
          const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

          if (isMobile) {
            document.querySelectorAll("#product-list .card").forEach((card) => {
              let flipped = false;
              let tapTimer = null;

              card.addEventListener("click", (e) => {
                if (e.target.classList.contains("buy") || e.target.closest('.buy')) return;

                if (tapTimer) {
                  clearTimeout(tapTimer);
                  tapTimer = null;
                }

                if (!flipped) {
                  card.classList.add("flipped");
                  flipped = true;

                  tapTimer = setTimeout(() => {
                    card.classList.remove("flipped");
                    flipped = false;
                  }, 1000);
                } else {
                  const url = card.getAttribute("data-url");
                  window.location.href = url;
                }
              });
            });
          } else {
            // Laptop/Desktop view logic
            document.querySelectorAll("#product-list .card").forEach((card) => {
              // Flip on hover
              card.addEventListener("mouseenter", () => {
                card.classList.add("flipped");
              });

              card.addEventListener("mouseleave", () => {
                card.classList.remove("flipped");
              });

              // Navigate on click
              card.addEventListener("click", (e) => {
                if (e.target.classList.contains("buy") || e.target.closest('.buy')) return;
                const url = card.getAttribute("data-url");
                window.location.href = url;
              });
            });
          }
        }
        function applyFilters() {
          if (!allProducts || allProducts.length === 0) return;

          const priceRange = parseInt(document.getElementById("price-range").value) || 5000;
          const sizes = Array.from(document.querySelectorAll('#sizes input[type="checkbox"]:checked')).map(cb => cb.value);
          const colors = Array.from(document.querySelectorAll('#colors input[type="checkbox"]:checked')).map(cb => cb.value.toLowerCase());
          const categories = Array.from(document.querySelectorAll('#category input[type="checkbox"]:checked')).map(cb => cb.value.toLowerCase());
          const categoryTypes = Array.from(document.querySelectorAll('#categoryType input[type="checkbox"]:checked')).map(cb => cb.value.toLowerCase());

          // Get sorting preferences
          const sortPrice = document.querySelector('input[name="sort-price"]:checked')?.value;
          const sortName = document.querySelector('input[name="sort-name"]:checked')?.value;

          let filtered = [...allProducts];

          // Apply filters
          filtered = filtered.filter(product => {
            if (!product) return false;

            const matchesPrice = product.price <= priceRange;
            const matchesSize = sizes.length === 0 || (product.sizes && sizes.some(size => product.sizes[size] > 0));
            const matchesColor = colors.length === 0 || (
              product.color &&
              Array.isArray(product.color) &&
              product.color.some(col => colors.includes(col.toLowerCase()))
            );

            const matchesCategory = categories.length === 0 || (product.category && categories.includes(product.category.toLowerCase()));
            const matchesCategoryType =
              categoryTypes.length === 0 ||
              (product.categoryType &&
                product.categoryType.name &&
                categoryTypes.includes(product.categoryType.name.toLowerCase()));

            return matchesPrice && matchesSize && matchesColor && matchesCategory && matchesCategoryType;

          });

          // Apply sorting with priority to last selected
          if (sortPrice && sortName) {
            const priceSelectedTime = document.querySelector('input[name="sort-price"]:checked')?.dataset.selectedTime || 0;
            const nameSelectedTime = document.querySelector('input[name="sort-name"]:checked')?.dataset.selectedTime || 0;

            if (nameSelectedTime > priceSelectedTime) {
              // Name sort was selected last - prioritize name
              filtered.sort((a, b) => {
                const nameCompare = sortName === 'asc'
                  ? (a.name || '').toString().toLowerCase().localeCompare((b.name || '').toString().toLowerCase())
                  : (b.name || '').toString().toLowerCase().localeCompare((a.name || '').toString().toLowerCase());
                return nameCompare !== 0 ? nameCompare : (sortPrice === 'asc' ? a.price - b.price : b.price - a.price);
              });
            } else {
              // Price sort was selected last - prioritize price
              filtered.sort((a, b) => {
                const priceCompare = sortPrice === 'asc' ? a.price - b.price : b.price - a.price;
                return priceCompare !== 0 ? priceCompare : (sortName === 'asc'
                  ? (a.name || '').toString().toLowerCase().localeCompare((b.name || '').toString().toLowerCase())
                  : (b.name || '').toString().toLowerCase().localeCompare((a.name || '').toString().toLowerCase()));
              });
            }
          } else if (sortPrice) {
            // Only price sort selected
            filtered.sort((a, b) => sortPrice === 'asc' ? a.price - b.price : b.price - a.price);
          } else if (sortName) {
            // Only name sort selected
            filtered.sort((a, b) => {
              const nameA = (a.name || '').toString().toLowerCase();
              const nameB = (b.name || '').toString().toLowerCase();
              return sortName === 'asc' ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);
            });
          }

          renderProducts(filtered);
        }

        function renderProducts(products) {
          const productList = document.getElementById("product-list");
          if (!productList) return;

          productList.innerHTML = "";

          if (products && products.length > 0) {
            products.forEach(product => {
              if (!product) return;

              const productCard = `
        <div class="card" data-url="/products/${product._id || product.id || ''}">
          <div class="imgBox">
            <div class="front">
              <img src="${product.front_image || ''}" alt="${product.name || ''}" class="mouse" loading="lazy">
            </div>
            <div class="back">
              <img src="${product.back_image || ''}" alt="${product.name || ''}" class="mouse" loading="lazy">
            </div>
          </div>
          <div class="contentBox">
            <h3>${product.name || ''}</h3>
            <h2 class="price"><small>Rs.</small>${product.price || ''}</h2>
            <a href="/products/${product._id || product.id || ''}" class="buy">Buy Now</a>
          </div>
        </div>
      `;
              productList.innerHTML += productCard;
            });

            setupMobileNavigation();
          } else {
            productList.innerHTML = "<p>No products available.</p>";
          }
        }

        // Initialize filters and render
        document.addEventListener("DOMContentLoaded", () => {
          const priceRange = document.getElementById("price-range");
          if (priceRange) {
            updatePrice(priceRange.value);
            priceRange.addEventListener('input', (e) => updatePrice(e.target.value));
          }

          // Add event listeners to all filter inputs
          document.querySelectorAll('input[type="checkbox"], input[type="radio"]').forEach(input => {
            input.addEventListener('change', function () {
              if (this.type === 'radio') {
                this.dataset.selectedTime = Date.now();
              }
              applyFilters();
            });
          });

          // Initial render
          renderProducts(allProducts);
        });
      </script>

      <script src="scripts/script.js"></script>
      <script src="https://unpkg.com/feather-icons"></script>
      <script>
        feather.replace();
      </script>

      <script>
        window.addEventListener("load", function () {
          const loader = document.getElementById("page-loader");
          if (loader) {
            loader.classList.add("fade-out");
            setTimeout(() => (loader.style.display = "none"), 500);
          }
        });
      </script>
</body>

</html>